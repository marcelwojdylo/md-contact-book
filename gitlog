commit 01b3e14843e72c333d155c7117641de0c6cb9812
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Fri Jun 7 14:48:10 2019 +0200

    Added CLI functionality:
    
    - the user can now create contacts through the 'new contact' command which brings up a series of input prompts for each field
    
    PROBLEM: At runtime the program behaves as if in certain moments 'return' were pressed, even though it wasn't.
    
    NEXT STEP: Introduce CLI commands for manipulating contact fields.

commit 70d762438d9411e46ac4dfe0a940037a1f0ef93d
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Thu Jun 6 12:42:18 2019 +0200

    Removed some obsolete lines.

commit c89556d1d4f45f36cc57add3bcab6b43d5ae4984
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Thu Jun 6 12:41:26 2019 +0200

    Introduced new CLI functionality:now able to crudely print Contact objects by their contactID field.
    Also:
    
    - created Instructions data structure inside CLI class which will contain help strings
      now contains 'print help' message which prints the manual for the print command.
    
    - created Commands data structure inside CLI class which contains constants for various user commands
    
    - modified ContactBook class so that the main Contact[] is static
    
    - created Color class in package commandlineinterface which will govern style-related operations on strings. Now includes methods which return strings in a few basic colors, as enumerated in Color.ANSI
    
    - implemented method isPresent() in ContactBook which checks if contact of a given ID exists in the main Contact[] array of ContactBook.
    
    PROBLEM: ContactBook.isPresent(int ID) is not used locally in ContactBook, should be moved to the CLI.
    
    - The CLI can now print ContactBook.contacts by ID or by last name initial.
    
    - The CLI now has a little more colour to it.
    
    NEXT STEPS: Introduce user prompt tree for modifying contact fields (use setters in ContactBook).
    
    FURTHER PERSPECTIVE: Implement a parser to replace the primitive command implementation from specific whole strings.

commit 9e0b2cd53c857a2a3bf08b9ca80f3f9c5b346d18
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Thu Jun 6 02:49:00 2019 +0200

    Added package commandlineinterface which contains a non-instantiable CommandLineInterface public class with main method.
    
    The package uses java.util.Scanner to receive user input. Supports commands: quit printhelp printContactBook.
    
    The CommandLineInterface class has a ContactBook field which comes initialized (for now) with a list of generic contacts, as per the testing methods contained in class ContactBook.
    
    PROBLEM: The scanner only accepts strings without spaces, treating separate words as separate commands.
    
    NEXT STEP: Solve the input problem. Introduce more functionality to the CommandLineInterface class.
    
    FUTURE PERSPECTIVE: Move testing methods from class ContactBook to a unit test type entity.

commit f13ceb0a159564086666806ab2109cc0f0fb657c
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Wed Jun 5 13:32:38 2019 +0200

    Class ContactBookApp moved to be the main class for the entire application.
    
    NEXT STEP: Create command line interface for the application which will:
    
    - set contact fields
    - print contact fields
    - print contact book
    - create new contact in contact book
    - print contact book sorted by name
    - print contact by id
    - print contact by last name
    - print contact by phone number

commit bc1489c4ec69cef4afa2097dcd20090baed6ecfd
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Wed Jun 5 13:27:05 2019 +0200

    Added setters for all fields, one in class ContactBook, which calls its shadow in class Contact.
    
    NEXT STEP: Move class ContactBookApp from package 'system' to main catalog

commit 04cb3f71f57de13afcc59e7317fa4899af8b4079
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Wed Jun 5 12:57:36 2019 +0200

    Added package stub comandlineinterface.

commit ad84603d5a9d58da8d6f342bf4778ea49147d924
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Wed Jun 5 12:15:01 2019 +0200

    Added nested class ContactData inside Contact class. This is used to store data for each instance of Contact. Accessed now through getters. TODO: create setters for ContactData fields.
    
    NEXT STEP: create methods in ContactBook for modifying data in Contact

commit abb98dfdc856c7c0e2f13a3e43cba3f8030ee362
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Wed Jun 5 11:30:59 2019 +0200

    Cleaned up the code in broad strokes, reordering methods etc.
    
    NEXT STEP: Creating a data structure class inside Contact class and figure out a way to hide implementation from other classes. As it is, Contacts has public fields which it maybe does not need.

commit e8145a9e9df89e53a4481f4d01681ac0aef7d466
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Wed Jun 5 11:16:12 2019 +0200

    Restructured project into package'

commit 24a2c10bbea0eb975b9d688464259d7155973051
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Tue Jun 4 13:48:11 2019 +0200

    1. Created non-instantiable utility class ContactDataFormatter for keeping fields of class Contact uniform and remove non-digit characters or non-letter characters as needed, 2. Modified data types for fields in class Contact, 3. Created method in class ContactBook for sorting contacts by last name initial and method for printing the resulting list. NEXT STEP:

commit 70e10cb49bb0f7ca625da8cd6e638f722a3ad55f
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Sat Jun 1 19:34:43 2019 +0200

    Removed remaining Address.class and Business.class files from the directory

commit 2a0058d4390b418c26e87cd21880c721975d42d7
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Thu May 30 22:01:36 2019 +0200

    Implemented initialization method for generic contacts that gives them names starting with various letters.
    
    Added method stub for searching the contacts array for contacts with last names starting with given initial.

commit 57a5f62e8786fd88c8651e7e26a74a8c973bfefd
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Thu May 30 20:05:07 2019 +0200

    Implemented the Builder design pattern for Contact class.
    
    Contact class no longer references classes Address, Person, Business, which now are gone.
    
    NEXT STEP: re-implement generic contacts initialization methods

commit 05a162fd848e396ce0e4d308f0a8aa8ce29ceffc
Author: Marcel Wojdylo <marcelwojdylo@gmail.com>
Date:   Thu May 30 17:18:05 2019 +0200

    FIRST COMMIT
    
    Next steps:
    Remove Business, Person and Address as objects, implement an array instead.
    
    Class ContactBook has an array that stores Contact objects.
    
    Contact objects  consist of two further objects.
    
    One: Address (basically a containter for fields that go in an address.
    
    Two: A Person object or a Business object (also ontainers for data)
